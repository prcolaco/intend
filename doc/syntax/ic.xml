<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<!--
	Intend C language syntax highlight for use with KDE Kate Part
	(Kate, Kwrite, Quanta, KDevelop, etc).
	
	Copyright (C) 2008 by Pedro Reis Colaço <info@intendc.org>
	http://www.intendc.org
	
	LICENSE INFORMATION:
	
	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of the
	License, or (at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU Library General Public
	License along with this program; if not, write to the
	Free Software Foundation, Inc.,
	59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
	
	ACKNOWLEDGEMENTS:
	
	This project was based on the work of Pascal Schmidt in project
	Arena. See http://www.minimalinux.org/arena/ for more information.
-->
<language name="Intend C" version="1.0.0" kateversion="2.4" section="Scripts" extensions="*.ic;*.IC;*.ih" mimetype="text/x-csrc;text/x-c++src;text/x-chdr" priority="1" author="Pedro Reis Colaço" license="GPL">
	<highlighting>
		<list name="keywords">
			<item> break </item>
			<item> case </item>
			<item> catch </item>
			<item> class </item>
			<item> continue </item>
			<item> default </item>
			<item> do </item>
			<item> else </item>
			<item> extends </item>
			<item> false </item>
			<item> for </item>
			<item> if </item>
			<item> include </item>
			<item> new </item>
			<item> return </item>
			<item> switch </item>
			<item> throw </item>
			<item> try </item>
			<item> true </item>
            <item> use </item>
			<item> while </item>
		</list>
		<list name="types">
			<item> array </item>
			<item> bool </item>
			<item> float </item>
			<item> fn </item>
			<item> forced </item>
			<item> int </item>
			<item> mixed </item>
			<item> resource </item>
			<item> string </item>
			<item> struct </item>
			<item> void </item>
		</list>
		<contexts>
			<context attribute="Normal Text" lineEndContext="#stay" name="Normal">
				<DetectSpaces />
				<StringDetect attribute="Region Marker" context="Region Marker" String="//BEGIN" beginRegion="Region1" firstNonSpace="true" />
				<StringDetect attribute="Region Marker" context="Region Marker" String="//END" endRegion="Region1" firstNonSpace="true" />
				<keyword attribute="Keyword" context="#stay" String="keywords"/>
				<keyword attribute="Data Type" context="#stay" String="types"/>
				<DetectIdentifier />
				<DetectChar attribute="Symbol" context="#stay" char="{" beginRegion="Brace1" />
				<DetectChar attribute="Symbol" context="#stay" char="}" endRegion="Brace1" />
				<Float attribute="Float" context="#stay">
					<AnyChar String="fF" attribute="Float" context="#stay"/>
				</Float>
				<HlCOct attribute="Octal" context="#stay"/>
				<HlCHex attribute="Hex" context="#stay"/>
				<Int attribute="Decimal" context="#stay" >
					<StringDetect attribute="Decimal" context="#stay" String="ULL" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="LUL" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="LLU" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="UL" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="LU" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="LL" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="U" insensitive="TRUE"/>
					<StringDetect attribute="Decimal" context="#stay" String="L" insensitive="TRUE"/>
				</Int>
				<HlCChar attribute="Char" context="#stay"/>
				<DetectChar attribute="String" context="String" char="&quot;"/>
				<DetectChar attribute="String" context="StringAp" char="'"/>
				<IncludeRules context="##Doxygen" />
				<Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
				<Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
				<AnyChar attribute="Symbol" context="#stay" String=":!%&amp;()+,-/.*&lt;=&gt;?[]|~^&#59;"/>
			</context>
			<context attribute="String" lineEndContext="#stay" name="String">
				<LineContinue attribute="String" context="#stay"/>
				<HlCStringChar attribute="String Char" context="#stay"/>
				<DetectChar attribute="String" context="#pop" char="&quot;"/>
			</context>
			<context attribute="String" lineEndContext="#stay" name="StringAp">
				<LineContinue attribute="String" context="#stay"/>
				<HlCStringChar attribute="String Char" context="#stay"/>
				<DetectChar attribute="String" context="#pop" char="'"/>
			</context>
			<context attribute="Region Marker" lineEndContext="#pop" name="Region Marker">
			</context>
			<context attribute="Comment" lineEndContext="#pop" name="Commentar 1">
				<IncludeRules context="##Alerts" />
			</context>
			<context attribute="Comment" lineEndContext="#stay" name="Commentar 2">
				<Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="Comment"/>
				<IncludeRules context="##Alerts" />
			</context>
			<context attribute="Comment" lineEndContext="#stay" name="Outscoped" >
				<DetectSpaces />
				<IncludeRules context="##Alerts" />
				<DetectIdentifier />
				<DetectChar attribute="String" context="String" char="&quot;"/>
				<IncludeRules context="##Doxygen" />
				<Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
				<Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
				<RegExpr attribute="Comment" context="Outscoped intern" String="#\s*if" beginRegion="Outscoped" firstNonSpace="true" />
			</context>
			<context attribute="Comment" lineEndContext="#stay" name="Outscoped intern">
				<DetectSpaces />
				<IncludeRules context="##Alerts" />
				<DetectIdentifier />
				<DetectChar attribute="String" context="String" char="&quot;"/>
				<IncludeRules context="##Doxygen" />
				<Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
				<Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
				<RegExpr attribute="Comment" context="Outscoped intern" String="#\s*if" beginRegion="Outscoped" firstNonSpace="true" />
				<RegExpr attribute="Comment" context="#pop" String="#\s*endif" endRegion="Outscoped" firstNonSpace="true" />
			</context>
		</contexts>
		<itemDatas>
			<itemData name="Normal Text"  defStyleNum="dsNormal"/>
			<itemData name="Keyword"      defStyleNum="dsKeyword"/>
			<itemData name="Data Type"    defStyleNum="dsDataType"/>
			<itemData name="Decimal"      defStyleNum="dsDecVal"/>
			<itemData name="Octal"        defStyleNum="dsBaseN"/>
			<itemData name="Hex"          defStyleNum="dsBaseN"/>
			<itemData name="Float"        defStyleNum="dsFloat"/>
			<itemData name="Char"         defStyleNum="dsChar"/>
			<itemData name="String"       defStyleNum="dsString"/>
			<itemData name="String Char"  defStyleNum="dsChar"/>
			<itemData name="Comment"      defStyleNum="dsComment"/>
			<itemData name="Symbol"       defStyleNum="dsNormal"/>
			<itemData name="Prep. Lib"    defStyleNum="dsOthers"/> <!--,Qt::darkYellow,Qt::yellow,false,false)); -->
			<itemData name="Alert"        defStyleNum="dsAlert" />
			<itemData name="Region Marker" defStyleNum="dsRegionMarker" />
		</itemDatas>
	</highlighting>
	<general>
		<comments>
			<comment name="singleLine" start="//" />
			<comment name="multiLine" start="/*" end="*/" />
		</comments>
		<keywords casesensitive="1" additionalDeliminator="'&quot;" />
	</general>
</language>
